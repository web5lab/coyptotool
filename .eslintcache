[{"D:\\Cryptotool\\cryptotool\\src\\index.js":"1","D:\\Cryptotool\\cryptotool\\src\\reportWebVitals.js":"2","D:\\Cryptotool\\cryptotool\\src\\App.js":"3","D:\\Cryptotool\\cryptotool\\src\\walletconnect\\wc.js":"4","D:\\Cryptotool\\cryptotool\\src\\walletconnect\\config.js":"5"},{"size":535,"mtime":1673844141467,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1673844142123,"results":"8","hashOfConfig":"7"},{"size":1708,"mtime":1674216129098,"results":"9","hashOfConfig":"7"},{"size":1757,"mtime":1674215287224,"results":"10","hashOfConfig":"7"},{"size":582,"mtime":1674215287224,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"uiovmd",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Cryptotool\\cryptotool\\src\\index.js",[],["24","25"],"D:\\Cryptotool\\cryptotool\\src\\reportWebVitals.js",[],"D:\\Cryptotool\\cryptotool\\src\\App.js",["26","27"],"import './App.css';\r\nimport { useState } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { WalletConnect } from './walletconnect/wc';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\nfunction App() {\r\n  const [modal, setmodal] = useState(false)\r\n  const OpenModal =() => {\r\n    setmodal(true)\r\n  }\r\nconst CloseModal =() => {\r\n  setmodal(false)\r\n}\r\n\r\nconst ConnectWallet = async() => {\r\n  const wc = await WalletConnect()\r\n}\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className='navbar'><div className='navbar_left'><a href='https://web5lab.net'><img src='media/logo.png' className='navbar_web5lab_logo'></img></a><h1>Powerd By Web5lab</h1></div><div className='navbar_right'><a className='testnet_btn' href='https://testnet.cryptotool.in'>TestNet version</a><button className='Connect_Btn btn' onClick={ConnectWallet}>Connect Wallet</button></div></div>\r\n        <div className='app_content'>\r\n          <input type={'text'} className=\"input_box\"></input>\r\n        </div>\r\n        <div>\r\n          <button className='btn' onClick={OpenModal}>import csv file</button>\r\n          <input type={'file'}></input>\r\n          <button className='btn'>import excel file</button>\r\n        </div>\r\n      </header>\r\n      <ReactModal\r\n       isOpen={modal}\r\n      //  onAfterOpen={}\r\n       onRequestClose={CloseModal}\r\n       style={customStyles}\r\n       contentLabel=\"Example Modal\">\r\n        <button className='btn'>CloseModal</button>\r\n        \r\n      </ReactModal>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","D:\\Cryptotool\\cryptotool\\src\\walletconnect\\wc.js",[],"D:\\Cryptotool\\cryptotool\\src\\walletconnect\\config.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":26,"column":9,"nodeType":"34","messageId":"35","endLine":26,"endColumn":11},{"ruleId":"36","severity":1,"message":"37","line":32,"column":92,"nodeType":"38","endLine":32,"endColumn":150},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'wc' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]